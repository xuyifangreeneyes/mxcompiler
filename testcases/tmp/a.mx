int id;

class Test {
	bool id(bool id_) {
		return id_ == false;
	}

	Test() { }

	void test(string id) {
		id = "i am string";
		if (this.id((this != null) || (null == this))) {
			bool id = this.id(true);
			{
				int id;
				for (id = 0; this.id(id > 0); id++) {
					if (this.id((id | id) <= 0)) {
						break;
					}
				}
			}
			id = false;
		}
		if (id == "i am string") {
			if (this.id(id > "hello")) {
				return;
			}
			Test id = new Test();
			if (id.id(id.id(id.id(false)))) {
				int id = 233;
				{
					Test test = new Test();
					if (test.id(id > 0)) {
						id--;
					}
					--id;
				}
				return;
			}
			id = new Test();
		}
		id = "string";
	}
}

Test[] func(Test[][] t) {
	return t[0];
}

int main() {
	Test test = new Test();
	test.test("hello world");
	if (test.id(id > 0)) {
		Test[][] test = new Test[10][10];
		if (func(test) != null && func(test)[1] != null) {
			test[1][1] = func(test)[0];
		}
		return --id;
	}
	return 0;
}

A a = new A();
B b = a.method();
A aa = b.method().method().method();

class A {
	B b;
	B method() { }
}

class B {
	A a;
	A method() { }
}

/*!! metadata:
=== comment ===
王洋鲲 naive test
=== is_public ===
True
=== assert ===
success_compile
=== timeout ===
0
=== input ===

=== phase ===
semantic pretest
=== output ===

=== exitcode ===
0

!!*/
